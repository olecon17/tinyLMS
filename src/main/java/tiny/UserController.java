package tiny;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

@Controller    // This means that this class is a Controller
@RequestMapping(path = "/user") // This means URL's start with /demo (after Application path)
@CrossOrigin(origins = "http://localhost:4200")
public class UserController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private UserRepository userRepository;

    @PostMapping(path = "/add")
    public @ResponseBody
    String addNewUser(@RequestParam String name, @RequestParam String type) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        User user = new User();
        user.setName(name);
        user.setType(type);


        userRepository.save(user);
        return "User created";
    }

    @PostMapping(path = "/edit")
    public @ResponseBody
    String editUser(@RequestParam String id, String name, String type) {
        int userId = Integer.parseInt(id);

        User foundUser = userRepository.findOne(userId);

        if (!name.equals("")) {
            foundUser.setName(name);
        }

        if (!type.equals("")) {
            foundUser.setType(type);
        }

        userRepository.save(foundUser);

        return "User updated";
    }


    @PostMapping(path = "/delete")
    public @ResponseBody
    String deleteUser(@RequestParam String id) {
        int userId = Integer.parseInt(id);

        userRepository.delete(userId);
        return "User deleted";
    }

    @GetMapping(path = "/all")
    public @ResponseBody
    Iterable<User> getAllUsers() {
        // This returns a JSON or XML with the users
        return userRepository.findAll();
    }
}
